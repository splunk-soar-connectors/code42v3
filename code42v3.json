{
    "appid": "56f6a8c4-b70c-4a04-aaef-7842f1228b3f",
    "name": "code42 v3",
    "description": "Code42 provides simple, fast detection and response to everyday data loss from insider threats by focusing on customer data on endpoints and the cloud",
    "type": "generic",
    "product_vendor": "code42",
    "logo": "code42v3.svg",
    "logo_dark": "code42v3_dark.svg",
    "product_name": "code42 v3",
    "python_version": "3.9, 3.13",
    "fips_compliant": true,
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) splunk, 2025",
    "app_version": "1.0.0",
    "utctime_updated": "2025-10-18T19:36:49.737610Z",
    "package_name": "phantom_code42v3",
    "main_module": "code42v3_connector.py",
    "min_phantom_version": "6.3.0",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "cloud_instance": {
            "description": "Cloud instance of code42",
            "data_type": "string",
            "default": "https://api.us.code42.com",
            "required": true,
            "order": 0
        },
        "client_id": {
            "description": "API client id to be used for authentication.",
            "data_type": "string",
            "required": true,
            "order": 1
        },
        "client_secret": {
            "description": "API client secret to be used for authentication.",
            "data_type": "password",
            "required": true,
            "order": 2
        },
        "initial_poll_start_date": {
            "description": "The start date to use in the initial poll in yyyy-MM-dd HH:MM:SS format (defaults to 30 days back)",
            "data_type": "string",
            "order": 3
        },
        "initial_poll_end_date": {
            "description": "The end date to use in the initial poll in yyyy-MM-dd HH:MM:SS format (defaults to the current time)",
            "data_type": "string",
            "order": 4
        },
        "severity_filter": {
            "description": "A comma-separated list of session severities to poll for, such as high, low, medium, critical (defaults to getting critical, high, medium and low alerts)",
            "data_type": "string",
            "order": 5
        },
        "overlap_hours": {
            "description": "Hours of overlap with the last run to include older sessions that might have been modified after the previous run.",
            "data_type": "numeric",
            "order": 6,
            "default": 10
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Callback action for the on_poll ingest functionality",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "source_id": {
                    "data_type": "string",
                    "order": 0,
                    "description": "Session ID to limit the ingestion to",
                    "allow_list": true
                },
                "container_count": {
                    "data_type": "numeric",
                    "order": 1,
                    "description": "Maximum number of alerts to create (only used in Poll Now)"
                },
                "artifact_count": {
                    "data_type": "numeric",
                    "order": 2,
                    "description": "Maximum number of artifacts to create (only used in Poll Now)"
                }
            },
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get session details",
            "identifier": "get_session_details",
            "description": "Get the details of a session",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "session_id": {
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "description": "Session ID to limit the ingestion to",
                    "allow_list": true,
                    "contains": [
                        "code42 session id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.session_id",
                    "data_type": "string",
                    "contains": [
                        "code42 session id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sessionId",
                    "data_type": "string",
                    "contains": [
                        "code42 session id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tenantId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.actorId",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.beginTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.endTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.firstObserved",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.lastUpdated",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.noRiskEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.lowEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.moderateEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.highEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.criticalEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.contextSummary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.activitySummary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes.*.lastModifiedAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes.*.lastModifiedBy",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.notes.*.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.weight",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.eventCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.weight",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.eventCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.actions.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.actions.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.actions.*.eventCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.scores.*.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.scores.*.severity",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.scores.*.sourceTimestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.states.*.state",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.states.*.sourceTimestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.states.*.userId",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.alertId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.ruleId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.lessonId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.sourceTimestamp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.contentInspectionResults.detectedOnAlerts.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.actor_id",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.summary.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.activity_summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "identifier": "run_query",
            "description": "Search for file events using EventQuery",
            "verbose": "Build an Incydr EventQuery using convenience parameters that map directly to file-events fields.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "start_date": {
                    "description": "Start of date range (ISO8601 timestamp or relative duration such as P7D)",
                    "data_type": "string",
                    "example_values": [],
                    "order": 0
                },
                "end_date": {
                    "description": "End of date range (ISO8601 timestamp)",
                    "data_type": "string",
                    "example_values": [],
                    "order": 1
                },
                "file_category": {
                    "description": "Filter by file.category (Incydr FileCategory enum value)",
                    "data_type": "string",
                    "example_values": [],
                    "order": 2
                },
                "event_action": {
                    "description": "Filter by event.action (Incydr EventAction enum value)",
                    "data_type": "string",
                    "example_values": [],
                    "order": 3
                },
                "source_category": {
                    "description": "Filter by one or more source.category values",
                    "data_type": "string",
                    "example_values": [],
                    "allow_list": true,
                    "order": 4
                },
                "destination_category": {
                    "description": "Filter by one or more destination.category values",
                    "data_type": "string",
                    "example_values": [],
                    "allow_list": true,
                    "order": 5
                },
                "event_share_type": {
                    "description": "Filter by event.shareType values",
                    "data_type": "string",
                    "allow_list": true,
                    "example_values": [],
                    "order": 6
                },
                "report_type": {
                    "description": "Filter by report.type values",
                    "data_type": "string",
                    "allow_list": true,
                    "example_values": [],
                    "order": 7
                },
                "risk_indicators": {
                    "description": "Filter by risk.indicators.name",
                    "data_type": "string",
                    "allow_list": true,
                    "example_values": [],
                    "order": 8
                },
                "risk_severity": {
                    "description": "Filter by risk.severity (NO_RISK_INDICATED, LOW, MODERATE, HIGH, CRITICAL)",
                    "data_type": "string",
                    "example_values": [],
                    "order": 9
                },
                "risk_trust_reason": {
                    "description": "Filter by one or more risk.trustReason values",
                    "data_type": "string",
                    "allow_list": true,
                    "order": 10
                },
                "file_name": {
                    "description": "Filter by file.name",
                    "data_type": "string",
                    "order": 11
                },
                "file_path": {
                    "description": "Filter by file.path or directory",
                    "data_type": "string",
                    "order": 12
                },
                "md5": {
                    "description": "Filter by file.hash.md5",
                    "data_type": "string",
                    "order": 13,
                    "contains": [
                        "md5"
                    ]
                },
                "sha256": {
                    "description": "Filter by file.hash.sha256",
                    "data_type": "string",
                    "order": 14,
                    "contains": [
                        "sha256"
                    ]
                },
                "process_name": {
                    "description": "Filter by process.name",
                    "data_type": "string",
                    "order": 15
                },
                "url": {
                    "description": "Filter by tab.url or file.url",
                    "data_type": "string",
                    "order": 16,
                    "contains": [
                        "url"
                    ]
                },
                "window_title": {
                    "description": "Filter by tab title (window.title)",
                    "data_type": "string",
                    "order": 17
                },
                "private_ip": {
                    "description": "Filter by source.ip",
                    "data_type": "string",
                    "order": 18,
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                "public_ip": {
                    "description": "Filter by destination.ip",
                    "data_type": "string",
                    "order": 19,
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                "risk_score_gt": {
                    "description": "Return events where risk.score is greater than the supplied value",
                    "data_type": "numeric",
                    "order": 20
                },
                "untrusted_only": {
                    "description": "Exclude events with a populated risk.trustReason",
                    "data_type": "boolean",
                    "order": 21
                },
                "max_results": {
                    "description": "Maximum number of file events to return (default 1000, hard stop 10000)",
                    "data_type": "numeric",
                    "default": 1000,
                    "order": 22
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.start_date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.end_date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.file_category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.event_action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.destination_category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.event_share_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.report_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.risk_indicators",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.risk_severity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.risk_trust_reason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.file_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.file_path",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.md5",
                    "data_type": "string",
                    "contains": [
                        "md5"
                    ]
                },
                {
                    "data_path": "action_result.parameter.sha256",
                    "data_type": "string",
                    "contains": [
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.parameter.process_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.parameter.window_title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.private_ip",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.parameter.public_ip",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.parameter.risk_score_gt",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.untrusted_only",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.max_results",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.timestamp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.inserted",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.observer",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.detectorDisplayName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.ingested",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.shareType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.vector",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.name",
                    "data_type": "string",
                    "contains": [
                        "file name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.directory",
                    "data_type": "string",
                    "contains": [
                        "file path"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.mimeType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.mimeTypeByBytes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.mimeTypeByExtension",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.sizeInBytes",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.file.owner",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.created",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.modified",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.hash.md5",
                    "data_type": "string",
                    "contains": [
                        "md5"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.hash.sha256",
                    "data_type": "string",
                    "contains": [
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.hash.md5Error",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.hash.sha256Error",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.url",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.directoryId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.cloudDriveId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.classifications.*.vendor",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.classifications.*.value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.eventId",
                    "data_type": "string",
                    "contains": [
                        "code42 event id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.tabs.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.tabs.*.url",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceAccountName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceAccountType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceAccountCategory",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceUser.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.agentTimestamp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.userEmail",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.eventAction",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.fileName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.md5",
                    "data_type": "string",
                    "contains": [
                        "md5"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.git.repositoryEmail",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.git.repositoryUri",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.git.repositoryUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.changeType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.archiveId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.parentArchiveId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.*.passwordProtected",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.report.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.*.headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.report.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.deviceUid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.department",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.groups.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.groups.*.displayName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.executable",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.owner",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.extension.browser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.extension.version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.extension.loggedInUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.user.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.domain",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.ip",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.privateIp",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.operatingSystem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.email.sender",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.email.from",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.url",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.titleError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.urlError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.vendor",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.serialNumber",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.capacity",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.busType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.mediaName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.volumeName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.partitionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.accountName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.accountType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.*.domains",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.remoteHostName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.user.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.ip",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.privateIp",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.operatingSystem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.printJobName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.printerName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.vendor",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.serialNumber",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.capacity",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.busType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.mediaName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.volumeName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.partitionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.accountName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.accountType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.*.domains",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.remoteHostName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.email.*.recipients",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.email.*.subject",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.url",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.titleError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.urlError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.risk.severity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.*.weight",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.activityTier",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.risk.trustReason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.trusted",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.risk.activityUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.accountNames",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.domains",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.gitRepositoryUris",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.slackWorkspaces",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.urlPaths",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.eventId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.lastCommitHash",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryUri",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryEmail",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryEndpointPath",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.responseControls.preventativeControl",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.responseControls.reason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.responseControls.userJustification.reason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.responseControls.userJustification.text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.paste.mimeTypes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.paste.totalContentSize",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.paste.visibleContentSize",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "custom",
                "view": "code42v2_view.display_view"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "search sessions",
            "identifier": "search_sessions",
            "description": "Search for sessions using optional filters",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "actor_id": {
                    "description": "Filter sessions by actor id",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ],
                    "order": 0
                },
                "start_date": {
                    "description": "Filter sessions starting on or after this date. Format can be yyyy-MM-dd HH:mm:ss, a datetime string, POSIX int timestamp, or ISO 8601 timestamp",
                    "data_type": "string",
                    "order": 1
                },
                "end_date": {
                    "description": "Filter sessions starting before this date. Format can be yyyy-MM-dd HH:mm:ss, a datetime string, POSIX int timestamp, or ISO 8601 timestamp",
                    "data_type": "string",
                    "order": 2
                },
                "session_state": {
                    "description": "Comma separated list of session state values",
                    "data_type": "string",
                    "order": 3
                },
                "results_count": {
                    "description": "Maximum number of sessions to retrieve",
                    "data_type": "numeric",
                    "default": 50,
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.actor_id",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.session_state",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sessionId",
                    "data_type": "string",
                    "contains": [
                        "code42 session id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tenantId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.actorId",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.beginTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.endTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.firstObserved",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.lastUpdated",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.noRiskEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.lowEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.moderateEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.highEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.criticalEvents",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.contextSummary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.activitySummary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes.*.lastModifiedAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes.*.lastModifiedBy",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.notes.*.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.weight",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.riskIndicators.*.eventCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.weight",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.riskIndicatorsAlertedOn.*.eventCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.actions.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.actions.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.actions.*.eventCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.scores.*.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.scores.*.severity",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.scores.*.sourceTimestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.states.*.state",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.states.*.sourceTimestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.states.*.userId",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.alertId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.ruleId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.lessonId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.triggeredAlerts.*.sourceTimestamp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.contentInspectionResults.detectedOnAlerts.*",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.actor_id",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.summary.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.activity_summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.start_date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.end_date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.results_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "run advanced query",
            "identifier": "run_advanced_query",
            "description": "Execute an advanced file event query using a json filter definition",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "filters_json": {
                    "description": "Json string describing EventQuery filters",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "example_values": [
                        {
                            "equals": [
                                {
                                    "term": "file.category",
                                    "values": "Executable"
                                }
                            ]
                        },
                        {
                            "is_any": [
                                {
                                    "term": "destination.category",
                                    "values": [
                                        "AI Tools",
                                        "Cloud Storage"
                                    ]
                                }
                            ]
                        },
                        {
                            "greater_than": [
                                {
                                    "term": "risk.score",
                                    "value": 10
                                }
                            ]
                        },
                        {
                            "date_range": [
                                {
                                    "term": "event.inserted",
                                    "start_date": "P1D"
                                }
                            ]
                        },
                        {
                            "matches_any": true
                        },
                        {
                            "subquery": [
                                {
                                    "query": {
                                        "equals": [
                                            {
                                                "term": "file.category",
                                                "values": "Executable"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.timestamp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.inserted",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.observer",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.detectorDisplayName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.ingested",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.shareType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event.vector",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.name",
                    "data_type": "string",
                    "contains": [
                        "file name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.directory",
                    "data_type": "string",
                    "contains": [
                        "file path"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.mimeType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.mimeTypeByBytes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.mimeTypeByExtension",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.sizeInBytes",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.file.owner",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.created",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.modified",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.hash.md5",
                    "data_type": "string",
                    "contains": [
                        "md5"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.hash.sha256",
                    "data_type": "string",
                    "contains": [
                        "sha256"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.hash.md5Error",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.hash.sha256Error",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.url",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.directoryId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.cloudDriveId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.classifications.*.vendor",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.classifications.*.value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.eventId",
                    "data_type": "string",
                    "contains": [
                        "code42 event id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.tabs.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.tabs.*.url",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceAccountName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceAccountType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceAccountCategory",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.sourceUser.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.agentTimestamp",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.userEmail",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.eventAction",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.fileName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.md5",
                    "data_type": "string",
                    "contains": [
                        "md5"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.git.repositoryEmail",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.git.repositoryUri",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.acquiredFrom.*.git.repositoryUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.changeType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.archiveId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.parentArchiveId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file.*.passwordProtected",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.report.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.*.headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.report.count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.report.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.deviceUid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.department",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.groups.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.user.groups.*.displayName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.executable",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.owner",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.extension.browser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.extension.version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.process.extension.loggedInUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.user.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.domain",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.ip",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.privateIp",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.operatingSystem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.email.sender",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.email.from",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.url",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.titleError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.tabs.*.urlError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.vendor",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.serialNumber",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.capacity",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.busType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.mediaName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.volumeName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.removableMedia.partitionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.accountName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.accountType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.*.domains",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source.remoteHostName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.user.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.ip",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.privateIp",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.operatingSystem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.printJobName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.printerName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.vendor",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.serialNumber",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.capacity",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.busType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.mediaName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.volumeName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.removableMedia.partitionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.accountName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.accountType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.*.domains",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.remoteHostName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.email.*.recipients",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.email.*.subject",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.url",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.titleError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destination.tabs.*.urlError",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.risk.severity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.*.weight",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.risk.indicators.activityTier",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.risk.trustReason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.trusted",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.risk.activityUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.accountNames",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.domains",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.gitRepositoryUris",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.slackWorkspaces",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk.untrustedValues.urlPaths",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.eventId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.lastCommitHash",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryUri",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryEmail",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.git.repositoryEndpointPath",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.responseControls.preventativeControl",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.responseControls.reason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.responseControls.userJustification.reason",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.responseControls.userJustification.text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.paste.mimeTypes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.paste.totalContentSize",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.paste.visibleContentSize",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.filters_json",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "set session state",
            "identifier": "set_session_state",
            "description": "Update the state of one or more sessions",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "session_ids": {
                    "description": "Comma separated list of session IDs to update",
                    "data_type": "string",
                    "required": true,
                    "contains": [
                        "code42 session id"
                    ],
                    "order": 0
                },
                "session_state": {
                    "description": "Target session state value",
                    "data_type": "string",
                    "required": true,
                    "example_values": [
                        "OPEN",
                        "IN_PROGRESS",
                        "CLOSED",
                        "CLOSED_TP",
                        "CLOSED_FP"
                    ],
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.session_ids",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.session_state",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get actor by id",
            "identifier": "get_actor_by_id",
            "description": "Retrieve details for a single actor by id",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "actor_id": {
                    "description": "Unique actor ID to retrieve.",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 actor id"
                    ]
                },
                "prefer_parent": {
                    "description": "Whether to prefer the parent actor.",
                    "data_type": "boolean",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.active",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.notes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.alternativeNames",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.inScope",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.startDate",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.endDate",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.firstName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.lastName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.division",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.department",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.locality",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.region",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.country",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerActorId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.parentActorId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.employeeType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.actor_id",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.prefer_parent",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get actor by name",
            "identifier": "get_actor_by_name",
            "description": "Retrieve details for a single actor by name",
            "type": "investigate",
            "read_only": true,
            "required": true,
            "parameters": {
                "name": {
                    "description": "Unique actor name to retrieve.",
                    "data_type": "string",
                    "order": 0
                },
                "prefer_parent": {
                    "description": "Whether to prefer the parent actor.",
                    "data_type": "boolean",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.active",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.notes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.alternativeNames",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.inScope",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.startDate",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.endDate",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.firstName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.lastName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.division",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.department",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.locality",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.region",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.country",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerActorId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.parentActorId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.employeeType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.prefer_parent",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list users",
            "identifier": "list_users",
            "description": "List Code42 users with optional filters",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "active": {
                    "description": "Return only users matching this active state",
                    "data_type": "boolean",
                    "order": 0
                },
                "blocked": {
                    "description": "Return only users matching this blocked state",
                    "data_type": "boolean",
                    "order": 1
                },
                "username": {
                    "description": "Filter users by username",
                    "data_type": "string",
                    "order": 2,
                    "contains": [
                        "code42 username"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.summary.total_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.userId",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.legacyUserId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.username",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.firstName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.lastName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.orgId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.orgGuid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.legacyOrgId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.orgName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.active",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.blocked",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.creationDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.modificationDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.active",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.blocked",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "code42 username"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "deactivate user",
            "identifier": "deactivate_user",
            "description": "Deactivate a Code42 user",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_id": {
                    "description": "Unique user ID to deactivate",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 user id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.user_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.user_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.deactivated",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "reactivate user",
            "identifier": "reactivate_user",
            "description": "Reactivate a Code42 user",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_id": {
                    "description": "Unique user ID to reactivate",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "contains": [
                        "code42 user id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.user_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.user_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.reactivated",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get user",
            "identifier": "get_user",
            "description": "Retrieve details for a single user",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "user_id": {
                    "description": "Unique user ID / username to retrieve",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "contains": [
                        "code42 user id",
                        "code42 username"
                    ],
                    "example_values": [
                        "1234567890",
                        "jdoe@example.com"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.user_id",
                    "data_type": "string",
                    "contains": [
                        "code42 user id",
                        "code42 username"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.userId",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.legacyUserId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.username",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.firstName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.lastName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.orgId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.orgGuid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.legacyOrgId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.orgName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.active",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.blocked",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.creationDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.modificationDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.user_id",
                    "data_type": "string",
                    "contains": [
                        "code42 user id",
                        "code42 username"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "create case",
            "identifier": "create_case",
            "description": "Create a new case",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "name": {
                    "description": "The unique name given to the case",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "subject": {
                    "description": "The user UID of the subject being investigated in this case.",
                    "data_type": "string",
                    "order": 1,
                    "contains": [
                        "code42 actor id"
                    ]
                },
                "assignee": {
                    "description": "The actor ID of the administrator assigned to investigate the case.",
                    "data_type": "string",
                    "order": 2,
                    "contains": [
                        "code42 administrator user id"
                    ]
                },
                "description": {
                    "description": "Brief description providing context for a case.",
                    "data_type": "string",
                    "order": 3
                },
                "findings": {
                    "description": "Markdown formatted text summarizing the findings for a case.",
                    "data_type": "string",
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.summary.case_number",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.case_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.number",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.createdAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.updatedAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.findings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "contains": [
                        "code42 case status"
                    ]
                },
                {
                    "data_path": "action_result.data.*.subject",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.subjectUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 actor name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.assignee",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.assigneeUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator username"
                    ]
                },
                {
                    "data_path": "action_result.data.*.createdByUserUid",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.createdByUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 username"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.subject",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.assignee",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator user id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.findings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update case",
            "identifier": "update_case",
            "description": "Update details for an existing case",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "case_number": {
                    "description": "Case number to update",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "name": {
                    "description": "The unique name given to the case",
                    "data_type": "string",
                    "order": 1
                },
                "subject": {
                    "description": "The user UID of the subject being investigated in this case",
                    "data_type": "string",
                    "order": 2,
                    "contains": [
                        "code42 actor id"
                    ]
                },
                "assignee": {
                    "description": "The actor ID of the administrator assigned to investigate the case",
                    "data_type": "string",
                    "order": 3,
                    "contains": [
                        "code42 administrator user id"
                    ]
                },
                "description": {
                    "description": "Brief description providing context for a case",
                    "data_type": "string",
                    "order": 4
                },
                "findings": {
                    "description": "Markdown formatted text summarizing the findings for a case",
                    "data_type": "string",
                    "order": 5
                },
                "status": {
                    "description": "Case status",
                    "data_type": "string",
                    "contains": [
                        "code42 case status"
                    ],
                    "example_values": [
                        "ARCHIVED",
                        "CLOSED",
                        "OPEN"
                    ],
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.summary.case_number",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.case_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.number",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.createdAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.updatedAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.findings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "contains": [
                        "code42 case status"
                    ]
                },
                {
                    "data_path": "action_result.data.*.subject",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.subjectUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 actor name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.assignee",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.assigneeUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator username"
                    ]
                },
                {
                    "data_path": "action_result.data.*.createdByUserUid",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.createdByUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 username"
                    ]
                },
                {
                    "data_path": "action_result.parameter.case_number",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.subject",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.assignee",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator user id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.findings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.status",
                    "data_type": "string",
                    "contains": [
                        "code42 case status"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "close case",
            "identifier": "close_case",
            "description": "Close an open case",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "case_number": {
                    "description": "Case number to close",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.case_number",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.case_number",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "add case event",
            "identifier": "add_case_event",
            "description": "Attach file events to a case",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "case_number": {
                    "description": "Case number to update",
                    "required": true,
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "code42 case number"
                    ]
                },
                "event_ids": {
                    "description": "Comma separated list of event IDs to attach",
                    "required": true,
                    "data_type": "string",
                    "allow_list": true,
                    "order": 1,
                    "contains": [
                        "code42 event id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.case_number",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.event_ids",
                    "data_type": "string",
                    "contains": [
                        "code42 event id"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "add legalhold custodian",
            "identifier": "add_legalhold_custodian",
            "description": "Add a custodian to a legal hold matter",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "matter_id": {
                    "description": "Legal hold matter ID",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 matter id"
                    ]
                },
                "user_id": {
                    "description": "Custodian user ID",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "contains": [
                        "code42 user id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.matter_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.user_id",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.membershipActive",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.membershipCreationDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.matter.matterId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.matter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.custodian.userId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.custodian.username",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.custodian.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "remove legalhold custodian",
            "identifier": "remove_legalhold_custodian",
            "description": "Remove a custodian from a legal hold matter",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "matter_id": {
                    "description": "Legal hold matter ID",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 matter id"
                    ]
                },
                "user_id": {
                    "description": "Custodian user ID",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "contains": [
                        "code42 user id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.matter_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.user_id",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update actor",
            "identifier": "update_actor",
            "description": "Update actor metadata and monitoring dates",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "actor_id": {
                    "description": "Unique actor ID to update",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "contains": [
                        "code42 actor id"
                    ]
                },
                "notes": {
                    "description": "Additional notes for the risk profile",
                    "data_type": "string",
                    "order": 1
                },
                "start_date": {
                    "description": "The starting date for the user. Accepts a datetime object or a string in the format yyyy-MM-dd (UTC) format",
                    "data_type": "string",
                    "order": 2
                },
                "end_date": {
                    "description": "The starting date for the user. Accepts a datetime object or a string in the format yyyy-MM-dd (UTC) format",
                    "data_type": "string",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.actor_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.actorId",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.notes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.active",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.startDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.endDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.alternateNames",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.inScope",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.firstName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.lastName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.displayName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.department",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.division",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.locality",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.employeeType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerActorId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.parentActorId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.notes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.start_date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.end_date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list cases",
            "identifier": "list_cases",
            "description": "List cases with optional filters",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "assignee": {
                    "description": "Filter cases by assignee",
                    "data_type": "string",
                    "order": 0
                },
                "is_assigned": {
                    "description": "Filter cases based on assignment state",
                    "data_type": "boolean",
                    "order": 1
                },
                "name": {
                    "description": "Filter cases by name",
                    "data_type": "string",
                    "order": 2
                },
                "status": {
                    "description": "Filter cases by status value",
                    "data_type": "string",
                    "order": 3,
                    "example_values": [
                        "OPEN",
                        "CLOSED",
                        "ARCHIVED"
                    ],
                    "contains": [
                        "code42 case status"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.summary.total_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.number",
                    "data_type": "numeric",
                    "contains": [
                        "code42 case number"
                    ]
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.createdAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.updatedAt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.subject",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.subjectUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 actor name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "contains": [
                        "code42 case status"
                    ]
                },
                {
                    "data_path": "action_result.data.*.assignee",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.assigneeUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 administrator username"
                    ]
                },
                {
                    "data_path": "action_result.data.*.createdByUserUid",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.createdByUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 username"
                    ]
                },
                {
                    "data_path": "action_result.data.*.lastModifiedByUserUid",
                    "data_type": "string",
                    "contains": [
                        "code42 user id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.lastModifiedByUsername",
                    "data_type": "string",
                    "contains": [
                        "code42 username"
                    ]
                },
                {
                    "data_path": "action_result.parameter.assignee",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.is_assigned",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.status",
                    "data_type": "string",
                    "contains": [
                        "code42 case status"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list available watchlists",
            "identifier": "list_available_watchlists",
            "description": "List watchlists available to an actor",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "actor_id": {
                    "description": "Filter watchlists that include the supplied actor ID",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "code42 actor id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.actor_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.listType",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist type"
                    ]
                },
                {
                    "data_path": "action_result.data.*.watchlistId",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tenantId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.stats.includedActorsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.includedDirectoryGroupsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.includedDepartmentsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.excludedDepartmentsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.excludedActorsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get watchlist id by name",
            "identifier": "get_watchlist_id_by_name",
            "description": "Resolve a watchlist ID either by its type (ex: `DEPARTING_EMPLOYEE`) or its title in the case of `CUSTOM` watchlists",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "watchlist_name": {
                    "description": "Watchlist name to look up. For default watchlists, use the type value. For custom watchlists, use the title",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "contains": [
                        "code42 watchlist name"
                    ],
                    "example_values": [
                        "DEPARTING_EMPLOYEE",
                        "FLIGHT_RISK",
                        "NEW_EMPLOYEE",
                        "CONTRACT_EMPLOYEE",
                        "HIGH_IMPACT_EMPLOYEE",
                        "POOR_SECURITY_PRACTICES",
                        "CUSTOM_WATCHLIST",
                        "MY_CUSTOM_WATCHLIST_TITLE"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.watchlist_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.watchlistId",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "create watchlist",
            "identifier": "create_watchlist",
            "description": "Create a new watchlist",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "watchlist_name": {
                    "description": "Watchlist type value to create. Example values: DEPARTING_EMPLOYEE, SUSPICIOUSSYSTEMACTIVITY, CUSTOM",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 watchlist name"
                    ],
                    "example_values": [
                        "DEPARTING_EMPLOYEE",
                        "FLIGHT_RISK",
                        "NEW_EMPLOYEE",
                        "CONTRACT_EMPLOYEE",
                        "HIGH_IMPACT_EMPLOYEE",
                        "POOR_SECURITY_PRACTICES",
                        "SUSPICIOUSSYSTEMACTIVITY",
                        "CUSTOM"
                    ]
                },
                "title": {
                    "description": "The required title for a CUSTOM watchlist",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "description": {
                    "description": "Watchlist description",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.watchlistId",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.listType",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist type"
                    ]
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tenantId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.stats.includedActorsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.includedDirectoryGroupsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.includedDepartmentsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.excludedDepartmentsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.stats.excludedActorsCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.watchlist_name",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "delete watchlist",
            "identifier": "delete_watchlist",
            "description": "Delete a watchlist",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "watchlist_id": {
                    "description": "Watchlist ID to delete",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 watchlist id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.watchlist_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.watchlist_id",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "add actors to watchlist",
            "identifier": "add_actors_to_watchlist",
            "description": "Add actors to a watchlist",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "actor_ids": {
                    "description": "List of actor IDs to add",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 actor id"
                    ],
                    "allow_list": true
                },
                "watchlist_id": {
                    "description": "Watchlist ID to update",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "contains": [
                        "code42 watchlist id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.watchlist_id",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.summary.added",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.actor_ids",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.added_actor_count",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "remove actors from watchlist",
            "identifier": "remove_actors_from_watchlist",
            "description": "Remove actors from a watchlist",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "actor_ids": {
                    "description": "Comma separated list of actor IDs to remove",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "watchlist_id": {
                    "description": "Watchlist ID to update",
                    "data_type": "string",
                    "required": true,
                    "order": 1,
                    "contains": [
                        "code42 watchlist id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.actor_ids",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.watchlist_id",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.summary.actor_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.watchlist_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.removed",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.summary.status_code",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.removed_actor_count",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list actors in watchlist",
            "identifier": "list_actors_in_watchlist",
            "description": "List actors currently in a watchlist",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "watchlist_id": {
                    "description": "Watchlist ID to inspect.",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "code42 watchlist id"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.watchlist_id",
                    "data_type": "string",
                    "contains": [
                        "code42 watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.actorId",
                    "data_type": "string",
                    "contains": [
                        "code42 actor id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.actorname",
                    "data_type": "string",
                    "contains": [
                        "code42 actor name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.addedTime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "hunt file",
            "identifier": "hunt_file",
            "description": "Hunt for a file in the Incydr platform",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "file_hash": {
                    "description": "File hash to hunt for.",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "code42 file hash"
                    ]
                },
                "file_name": {
                    "description": "File name to use for the attachment",
                    "data_type": "string",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.file_hash",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.file_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.file_name",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        }
    ],
    "pip313_dependencies": {
        "wheel": [
            {
                "module": "boltons",
                "input_file": "wheels/py3/boltons-25.0.0-py3-none-any.whl"
            },
            {
                "module": "incydr",
                "input_file": "wheels/py3/incydr-2.6.0-py3-none-any.whl"
            },
            {
                "module": "isodate",
                "input_file": "wheels/py3/isodate-0.7.2-py3-none-any.whl"
            },
            {
                "module": "markdown_it_py",
                "input_file": "wheels/py3/markdown_it_py-4.0.0-py3-none-any.whl"
            },
            {
                "module": "mdurl",
                "input_file": "wheels/py3/mdurl-0.1.2-py3-none-any.whl"
            },
            {
                "module": "pydantic",
                "input_file": "wheels/py313/pydantic-1.10.24-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl"
            },
            {
                "module": "pygments",
                "input_file": "wheels/py3/pygments-2.19.2-py3-none-any.whl"
            },
            {
                "module": "python_dotenv",
                "input_file": "wheels/py3/python_dotenv-1.2.1-py3-none-any.whl"
            },
            {
                "module": "requests_toolbelt",
                "input_file": "wheels/shared/requests_toolbelt-1.0.0-py2.py3-none-any.whl"
            },
            {
                "module": "rich",
                "input_file": "wheels/py3/rich-14.2.0-py3-none-any.whl"
            },
            {
                "module": "typing_extensions",
                "input_file": "wheels/py3/typing_extensions-4.15.0-py3-none-any.whl"
            }
        ]
    },
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "boltons",
                "input_file": "wheels/py3/boltons-25.0.0-py3-none-any.whl"
            },
            {
                "module": "incydr",
                "input_file": "wheels/py3/incydr-2.6.0-py3-none-any.whl"
            },
            {
                "module": "isodate",
                "input_file": "wheels/py3/isodate-0.7.2-py3-none-any.whl"
            },
            {
                "module": "markdown_it_py",
                "input_file": "wheels/py3/markdown_it_py-3.0.0-py3-none-any.whl"
            },
            {
                "module": "mdurl",
                "input_file": "wheels/py3/mdurl-0.1.2-py3-none-any.whl"
            },
            {
                "module": "pydantic",
                "input_file": "wheels/py39/pydantic-1.10.24-cp39-cp39-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl"
            },
            {
                "module": "pygments",
                "input_file": "wheels/py3/pygments-2.19.2-py3-none-any.whl"
            },
            {
                "module": "python_dotenv",
                "input_file": "wheels/py3/python_dotenv-1.2.1-py3-none-any.whl"
            },
            {
                "module": "requests_toolbelt",
                "input_file": "wheels/shared/requests_toolbelt-1.0.0-py2.py3-none-any.whl"
            },
            {
                "module": "rich",
                "input_file": "wheels/py3/rich-14.2.0-py3-none-any.whl"
            },
            {
                "module": "typing_extensions",
                "input_file": "wheels/py3/typing_extensions-4.15.0-py3-none-any.whl"
            }
        ]
    }
}
